@model WebAplicacion.Models.Clientes.MantClientesViewModel

@{
    ViewBag.Title = "Index";
   // Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4 class="separador">Busqueda de Clientes</h4>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
        <hr/>
    <div class="row">
       
        
            <!-- Vista Parcial Datos principales-->
            <h4 class="separador">Mantenedor de condiciones del Cliente</h4>
            @*@Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
            <hr/>
            <div class="row">

                <div class="form-group">
                    @Html.LabelFor(model => model.Rut, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Rut, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rut, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Cliente, htmlAttributes: new {@class = "control-label col-md-2 "})
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Cliente, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Cliente, "", new {@class = "text-danger"})
                    </div>
                    @*<div class="form-group">
                
                   @*</div>*@

                   
                </div>
            </div>


        <div class="row">
            <h4 class="center separador">Administrador de Excepcoones</h4>
            <hr />
            <div class="col-md-6">
               
                <div class="form-group">
                    @Html.LabelFor(model => model.Bloqueo, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Bloqueo, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Bloqueo, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.Clasificacion, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Clasificacion, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>


                <div class="form-group">
                    @Html.Label("Plazo Operaciones", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10 form-inline">
                        @Html.EditorFor(model => model.Desde, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Desde)}})
                        @Html.ValidationMessageFor(model => model.Desde, "", new {@class = "text-danger"})

                        @Html.EditorFor(model => model.Hasta, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Hasta)}})
                        @Html.ValidationMessageFor(model => model.Hasta, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Retencion, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Retencion, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                        @Html.ValidationMessageFor(model => model.Retencion, "", new {@class = "text-danger"})
                    </div>
                    <span class="col-md-7">%</span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IdValidacion, htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-8">
                       @Html.DropDownListFor(model => model.IdValidacion,new SelectList (ViewBag.ValidacionPoliticas,"Id","Glosa"), "---Select una Politica ---")
                        @Html.ValidationMessageFor(model => model.IdValidacion, "", new {@class = "text-danger"})
                    </div>
                    
                </div>
                <div id="politicas" style="visibility: visible">
                    @*<div id ="politicas" style="visibility: hidden">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoA, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.LimiteTipoA, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            @Html.ValidationMessageFor(model => model.LimiteTipoA, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoB, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.LimiteTipoB, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            @Html.ValidationMessageFor(model => model.LimiteTipoB, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoC, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.LimiteTipoC, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            @Html.ValidationMessageFor(model => model.LimiteTipoC, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoD, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.LimiteTipoD, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            @Html.ValidationMessageFor(model => model.LimiteTipoD, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                </div>
                <div id="particular" style="visibility: visible">

                    @*<div id="particular" style="visibility: hidden">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.RutParticular, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.RutParticular, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.RutParticular, "", new {@class = "text-danger"})
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteParticular, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.LimiteParticular, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            @Html.ValidationMessageFor(model => model.LimiteParticular, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                </div>
            </div>





















        </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.Clasificacion, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Clasificacion, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>*@
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary"/>
                <input type="reset" value="Cancelar" class="btn btn-primary "/>
            </div>
        </div>
    </div>
}

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")

    <script type="text/javascript">
      

        $(document).ready(
            function () {
                $("#Cliente").autocomplete({
                    source: "/Clientes/GetClientesPorNombre",
                    minLength: 3
                });

                $("#Rut").autocomplete({
                    source: "/Clientes/GetClientesPorRut",
                    minLength: 6
                });

            });

        $("#IdValidacion").change(function () {
            alert("Handler for .change() called.");
        });






        @*function GetClientePorNombre() {
            $("#detalleCliente").hide();
            $("#busquedaCliente").hide();
            var nombre = $("#nombre").val();
            nombre = nombre.trim();
            if (isNaN(nombre)) {
                if (nombre.length > 3) {
                    $("#loaderCliente").fadeIn();
                    var daton = { "nombre": nombre };
                    $.ajax({
                        url: "@Url.Action("GetClientePorNombre", "Clientes")",
                        type: "POST",
                        data: JSON.stringify(daton),
                        dataType: "json",
                        contentType: "application/json",
                        success: function(response) {
                            $("#busquedaCliente").text("");
                            if (response.Clientes.length > 0) {
                                $("#loaderCliente").fadeOut('slow');
                                for (var i = 0; i < response.Clientes.length; i++) {
                                    var cadena = "";
                                    cadena +=
                                        "<li class='list-group-item' style='cursor:pointer;'); onclick='GetCliente(&quot;" +
                                        response.Clientes[i].Rut + "&quot;, ";
                                    cadena += "&quot;" + response.Clientes[i].Cliente + "&quot;'>";
                                    cadena += "<i class='fa fa-user'></i> " + response.Clientes[i].Cliente + "</li>";
                                    $("#busquedaCliente").append(cadena);
                                }
                                $("#busquedaCliente").fadeIn('slow');
                            } else {
                                $("#loaderCliente").fadeOut('slow');
                                var cadena = "";
                                cadena +=
                                    "<li class='list-group-item' style='cursor:pointer; font-weight:bold;');><i class='fa fa-frown-o'></i> No existen resultados</li>";
                                $("#busquedaCliente").append(cadena);
                                $("#busquedaCliente").fadeIn('slow');
                            }
                        },
                        error: function() {
                            console.log("Error al buscar cliente");
                        }
                    });
                } else {
                    $("#loaderCliente").hide();
                    if (nombre.length < 1) {
                        $("#busquedaCliente").text("");
                        $("#busquedaCliente").hide();
                    } else {
                        $("#busquedaCliente").text("");
                        var cadena = "";
                        cadena +=
                            "<li class='list-group-item' style='cursor:pointer; font-weight:bold;');>* Búsqueda debe ser mayor a 3 caracteres</li>";
                        $("#busquedaCliente").append(cadena);
                        $("#busquedaCliente").fadeIn('slow');
                    }
                }
            } else {
                if (nombre.length > 6) {
                    $("#loaderCliente").fadeIn();
                    var dato = { "nombre": nombre };
                    $.ajax({
                        url: "@Url.Action("GetClientePorRut", "Clientes")",
                        type: "POST",
                        data: JSON.stringify(dato),
                        dataType: "json",
                        contentType: "application/json",
                        success: function(response) {
                            $("#busquedaCliente").text("");
                            if (response.Clientes.length > 0) {
                                $("#loaderCliente").fadeOut('slow');

                                for (var i = 0; i < response.Clientes.length; i++) {
                                    var cadena = "";
                                    cadena +="<li class='list-group-item' style='cursor:pointer;'); onclick='GetCliente(&quot;" +
                                        response.Clientes[i].rut +"&quot;   , ";
                                    cadena += "&quot;" + response.Clientes[i].Nombre + "&quot;'>";
                                    cadena += "<i class='fa fa-user'>;" +
                                        "</i> " + response.Clientes[i].Nombre + "</li>";
                                        $("#busquedaCliente").append(cadena);
                                }
                                $("#busquedaCliente").fadeIn('slow');
                            } else {
                                $("#loaderCliente").fadeOut('slow');
                                var cadena = "";
                                cadena +=
                                    "<li class='list-group-item' style='cursor:pointer; font-weight:bold;');><i class='fa fa-frown-o'></i> No existen resultados</li>";
                                $("#busquedaCliente").append(cadena);
                                $("#busquedaCliente").fadeIn('slow');
                            }
                        },
                        error: function() {
                            console.log("Error al buscar cliente");
                        }
                    });
                } else {
                    $("#loaderCliente").hide();
                    $("#busquedaCliente").text("");
                    $("#busquedaCliente").hide();
                }
            }

        }*@


        @*function GetCliente(idCliente, nombreCliente) {
            $("#div_editCliente").hide();

            //$("#Cliente").val(nombreCliente);
            //$("#Rut").val(idCliente);
            $("#busquedaCliente").hide();
            $.ajax({
                url: '@Url.Action("BuscarDetalle", "Clientes")',
                type: 'POST',
                data: { rut: idCliente },
                success: function(result) {
                    if (result.success) {
                        //Significa que fue!
                        //Mandas alerta
                    } else {
                        //Significa que hubo error!
                    }
                }
            });
        }*@


        //$("#div_editCliente").load(baseUrl + "/clientescarterizados/getclienteporid", {
        //    idCliente: idCliente,
        //    viewName: "_editCliente"
        //});

        //$("#div_editCliente").fadeIn('slow');


    </script>
}