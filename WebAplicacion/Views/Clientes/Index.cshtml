@model WebAplicacion.Models.Clientes.MantClientesViewModel

@{
    ViewBag.Title = "Index";
   // Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4 class="separador">Busqueda de Clientes</h4>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
        <hr/>
    <div class="row">
       
        
            <!-- Vista Parcial Datos principales-->
            <h4 class="separador">Mantenedor de condiciones del Cliente</h4>
            @*@Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
            <hr/>
            <div class="row">

                <div class="form-group">
                    @Html.LabelFor(model => model.Rut, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.Rut, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rut, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.Cliente, htmlAttributes: new {@class = "control-label col-md-2 "})
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Cliente, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Cliente, "", new {@class = "text-danger"})
                    </div>
                    @*<div class="form-group">
                
                   @*</div>*@

                   
                </div>
            </div>


        <div class="row">
            <h4 class="center separador">Administrador de Excepcoones</h4>
            <hr />
            <div class="col-md-6">
               
                <div class="form-group">
                    @Html.LabelFor(model => model.Bloqueo, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Bloqueo, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Bloqueo, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.Clasificacion, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Clasificacion, new {htmlAttributes = new {@class = "form-control"}})
                    </div>
                </div>


                <div class="form-group">
                    @Html.Label("Plazo Operaciones", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10 form-inline">
                        @Html.EditorFor(model => model.Desde, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Desde)}})
                        @Html.ValidationMessageFor(model => model.Desde, "", new {@class = "text-danger"})

                        @Html.EditorFor(model => model.Hasta, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Hasta)}})
                        @Html.ValidationMessageFor(model => model.Hasta, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Retencion, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-3">
                        <div class="input-group">
                            @Html.EditorFor(model => model.Retencion, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayName("%") } })
                            <span class="input-group-addon">%</span>
                        </div>
                            @Html.ValidationMessageFor(model => model.Retencion, "", new { @class = "text-danger" })
                        </div>
                  
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.IdValidacion, htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-8">
                       @*@Html.DropDownListFor(model => model.IdValidacion,new SelectList (ViewBag.ValidacionPoliticas,"Id","Glosa"), "---Select una Politica ---")*@
                        @Html.ValidationMessageFor(model => model.IdValidacion, "", new {@class = "text-danger"})
                    </div>
                    
                </div>
                <div id="politicas" style="visibility: visible">
                    @*<div id ="politicas" style="visibility: hidden">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoA, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            <div class="input-group">
                               @Html.EditorFor(model => model.LimiteTipoA, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                                <span class="input-group-addon">%</span>
                            </div>
                             @Html.ValidationMessageFor(model => model.LimiteTipoA, "", new {@class = "text-danger"})
                        </div>
                       
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoB, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            <div class="input-group">
                                @Html.EditorFor(model => model.LimiteTipoB, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayName("%") } })
                                <span class="input-group-addon">%</span>
                            </div>
                                @Html.ValidationMessageFor(model => model.LimiteTipoB, "", new { @class = "text-danger" })
                            </div>
                       
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoC, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            <div class="input-group">
                                @Html.EditorFor(model => model.LimiteTipoC, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayName("%") } })
                                <span class="input-group-addon">%</span>
                            </div>
                            @Html.ValidationMessageFor(model => model.LimiteTipoC, "", new {@class = "text-danger"})
                        </div>
                        <span class="col-md-5">%</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteTipoD, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            <div class="input-group">
                                @Html.EditorFor(model => model.LimiteTipoD, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayName("%") } })
                                <span class="input-group-addon">%</span>
                            </div>
                                @Html.ValidationMessageFor(model => model.LimiteTipoD, "", new { @class = "text-danger" })
                            </div>
                       
                    </div>
                </div>
                <div id="particular" style="visibility: visible">

                    @*<div id="particular" style="visibility: hidden">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.RutParticular, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.RutParticular, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.RutParticular, "", new {@class = "text-danger"})
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LimiteParticular, htmlAttributes: new {@class = "control-label col-md-4"})
                        <div class="col-md-3">
                            <div class="input-group">
                            @Html.EditorFor(model => model.LimiteParticular, new {htmlAttributes = new {@class = "form-control", placeholder = Html.DisplayName("%")}})
                            <span class="input-group-addon">%</span>
                        </div>
                        </div>
                            @Html.ValidationMessageFor(model => model.LimiteParticular, "", new {@class = "text-danger"})
                        </div>
                    
                    </div>
                </div>
            </div>




        </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.Clasificacion, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Clasificacion, new {htmlAttributes = new {@class = "form-control"}})
                </div>
            </div>*@
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary"/>
                <input type="reset" value="Cancelar" class="btn btn-primary "/>
            </div>
        </div>
    @*</div>*@
}

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")

    <script type="text/javascript">


        $(document).ready(
            function() {
                $("#Cliente").autocomplete({
                    source: "/Clientes/GetClientesPorNombre",
                    minLength: 3
                });

                $("#Rut").autocomplete({
                    source: "/Clientes/GetClientesPorRut",
                    minLength: 6
                });

            });


        $("#Cliente").keypress(function (event) {
            if (event.which == 13) {
                var nombre = $("#Cliente").val();
                var dato = { "nombre": nombre };
                $.ajax({
                    url: "/Clientes/GetClientePorNombre",
                    type: "POST",
                    data: JSON.stringify(dato),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (response) {

                        $("#Rut").val(response.Rut);
                       cargardatosf();

                    },
                    error: function () {
                        alert("hay un error");
                    }
                });

            }
        });

        $("#Opercion_RutCliente").keypress(function (event) {
            if (event.which == 13) {
                var nombre = $("#Opercion_RutCliente").val();
                var daton = { "nombre": nombre };
                $.ajax({
                    url: "/Clientes/GetClientePorRut",
                    type: "POST",
                    data: JSON.stringify(daton),
                    dataType: "json",
                    contentType: "application/json",
                    success: function (response) {
                        $("#Opercion_Nombre").val(response[0].Cliente);

                        cargardatosf();
                    }
                });

            }
        });










        $("#IdValidacion").change(function() {
            alert("Handler for .change() called.");
            if ($("#IdValidacion").val() == "")
            {

            }
            else if ($("#IdValidacion").val() == "")
            {
            }
            else if ($("#IdValidacion").val() == "")
                {
            }
        });


        //function cargardatosf() {
        //    var rut = $("#Rut").val();
        //   var datof = { "rut": rut};
        //    alert(datof.rut + " " + datof.tipodoc + " " + datof.tipomond);
        //    $.ajax({
        //        url: "/Clientes/GetClienteDatosFinacieros",
        //        type: "POST",
        //        data: JSON.stringify(datof),
        //        dataType: "json",
        //        contentType: "application/json",
        //        success: function(response) {
        //            //$("#Opercion_ComisionMin").val(response.Financie.ComisionMin);
        //            //$("#Opercion_ComisionMax").val(response.Financie.ComisionMax);
        //            //$("#Opercion_Comision").val(response.Financie.Comision);
        //            //$("#Opercion_TasaOperacion").val(response.Financie.Tasa);
        //            //$("#Opercion_Financiamiento").val(response.Financie.Anticipo);
        //            //$("#Opercion_Gastosope").val(response.Financie.GastoOper);
        //            //$("#Opercion_sNotificacion").val(response.Financie.NotificacionDocto);
        //            //$("#Opercion_vNotificacion").val(response.Financie.Notificacion);


        //        }
        //    });



     


      

      

    </script>
}