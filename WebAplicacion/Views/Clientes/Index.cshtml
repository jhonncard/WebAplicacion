@model WebAplicacion.Models.Mant_ClientesViewModel

@{
    ViewBag.Title = "Index";
   // Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="separador">Mantenedor de condiciones del Cliente</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
        <div class="row">

            <div class="form-group">
                @Html.LabelFor(model => model.Rut, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rut, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rut, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @Html.EditorFor(model => model.Cliente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">
            <h4 class="center separador">Administrador de Excepcoones</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.Bloqueo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-md-8">
                    @Html.EditorFor(model => model.Bloqueo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bloqueo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Plazo Operaciones", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8 form-inline">
                    @Html.EditorFor(model => model.Desde, new { htmlAttributes = new { @class = "form-control" , placeholder = Html.DisplayNameFor(n => n.Desde) } })
                    @Html.ValidationMessageFor(model => model.Desde, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Hasta, new { htmlAttributes = new { @class = "form-control" , placeholder = Html.DisplayNameFor(n => n.Hasta) } })
                    @Html.ValidationMessageFor(model => model.Hasta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Retencion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Retencion, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayName("%") } })
                    @Html.ValidationMessageFor(model => model.Retencion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Clasificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.LabelFor(model => model.Clasificacion, new { htmlAttributes = new { @class = "form-control" } })
             </div>
        </div>
    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                <input type="" value="Cancelar" class="btn btn-primary ClienteCancelar" />
            </div>
        </div>
    
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
